@page "/libros"
@using Proyecto2.Frontend.Models
@using Proyecto2.Frontend.Services
@using Proyecto2.Frontend.Auth
@using Microsoft.AspNetCore.Components.Web
@inherits ProtectedComponentBase
@inject ILibroService LibroService
@inject ISnackbar Snackbar

<div class="w-full px-4 py-8">
    <MudPaper Class="w-full p-10 rounded-xl shadow-md bg-white">
        <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between mb-6">
            <MudText Typo="Typo.h5" Class="text-gray-800 font-bold">📚 Libros Registrados</MudText>
            <MudButton Href="/libros/registrar"
                       StartIcon="@Icons.Material.Filled.Add"
                       Style="background-color: rgb(34, 197, 94); color: white;"
                       Variant="Variant.Filled"
                       Class="mt-4 sm:mt-0 transition-transform hover:scale-105 shadow-md">
                Agregar Libro
            </MudButton>
        </div>

        <!-- Búsqueda -->
        <div class="flex flex-col sm:flex-row items-center gap-4 mb-6">
            <!-- Campo de texto de búsqueda -->
            <input @bind="_query"
                   @onkeydown="HandleKeyDown"
                   type="text"
                   placeholder="Buscar por título, autor o año..."
                   class="w-24 sm:w-48 px-3 py-2 border border-gray-300 rounded-xl shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 transition" />

            <!-- Botón Buscar visible -->
            <button @onclick="BuscarLibros"
                    style="background-color: #2563eb; color: white;"
                    class="px-4 py-2 rounded-md text-sm font-semibold hover:bg-blue-700 transition">
                Buscar
            </button>

            <!-- Botón Limpiar visible -->
            <button @onclick="LimpiarBusqueda"
                    style="background-color: #e5e7eb; color: #1f2937;"
                    class="px-4 py-2 rounded-md text-sm font-semibold hover:bg-gray-300 transition">
                Limpiar
            </button>
        </div>


        <!-- Tabla -->
        <div class="w-full overflow-x-auto border border-gray-300 rounded-md">
            <MudTable Items="_librosFiltrados"
                      Hover="true"
                      Dense="false"
                      Bordered="false"
                      Elevation="0"
                      Class="w-full text-base border-collapse table-auto leading-relaxed">
                <HeaderContent>
                    <MudTh Class="px-5 py-3 bg-gray-100 text-left text-gray-700 font-semibold border border-gray-300">Título</MudTh>
                    <MudTh Class="px-5 py-3 bg-gray-100 text-left text-gray-700 font-semibold border border-gray-300">Nombre Autor</MudTh>
                    <MudTh Class="px-5 py-3 bg-gray-100 text-left text-gray-700 font-semibold border border-gray-300">Año</MudTh>
                    <MudTh Class="px-5 py-3 bg-gray-100 text-left text-gray-700 font-semibold border border-gray-300">Género</MudTh>
                    <MudTh Class="px-5 py-3 bg-gray-100 text-left text-gray-700 font-semibold border border-gray-300">Páginas</MudTh>
                    <MudTh Class="px-5 py-3 bg-gray-100 text-left text-gray-700 font-semibold border border-gray-300">Acciones</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd Class="px-5 py-3 border border-gray-200">@context.Titulo</MudTd>
                    <MudTd Class="px-5 py-3 border border-gray-200">@context.NombreAutor</MudTd>
                    <MudTd Class="px-5 py-3 border border-gray-200">@context.Anio</MudTd>
                    <MudTd Class="px-5 py-3 border border-gray-200">@context.Genero</MudTd>
                    <MudTd Class="px-5 py-3 border border-gray-200">@context.NumeroPaginas</MudTd>
                    <MudTd Class="px-5 py-3 border border-gray-200 space-x-2">
                        <MudButton OnClick="() => EliminarLibro(context)"
                                   Style="background-color: rgb(220, 38, 38); color: white;"
                                   Size="Size.Small"
                                   Variant="Variant.Filled"
                                   Class="transition-transform duration-200 ease-in-out hover:scale-105">
                            🗑️ Eliminar
                        </MudButton>

                        <MudButton Href="@($"/libros/editar/{context.Id}")"
                                   Style="background-color: rgb(17, 24, 39); color: white;"
                                   Size="Size.Small"
                                   Variant="Variant.Filled"
                                   Class="transition-transform duration-200 ease-in-out hover:scale-105">
                            ✏️ Editar
                        </MudButton>
                    </MudTd>
                </RowTemplate>
            </MudTable>
        </div>
    </MudPaper>
</div>

@code {
    private List<LibroDto> _librosFiltrados = new();
    private string? _query;

    protected override async Task OnAuthenticatedInitializedAsync()
    {
        _librosFiltrados = await LibroService.ObtenerTodosAsync();
    }

    private async Task BuscarLibros()
    {
        if (string.IsNullOrWhiteSpace(_query))
        {
            _librosFiltrados = await LibroService.ObtenerTodosAsync();
        }
        else
        {
            _librosFiltrados = await LibroService.BuscarAsync(_query);
        }
    }

    private async Task LimpiarBusqueda()
    {
        _query = "";
        _librosFiltrados = await LibroService.ObtenerTodosAsync();
    }

    private async Task EliminarLibro(LibroDto libro)
    {
        var eliminado = await LibroService.EliminarAsync(libro.Id);

        if (eliminado)
        {
            Snackbar.Add("📕 Libro eliminado", Severity.Success);
            await BuscarLibros();
        }
        else
        {
            Snackbar.Add("❌ Error al eliminar libro", Severity.Error);
        }
    }

    private async Task HandleKeyDown(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await BuscarLibros();
        }
    }
}
