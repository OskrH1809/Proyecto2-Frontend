@using MudBlazor
@inject IAutorService AutorService
@inject ISnackbar Snackbar
@using Proyecto2.Frontend.Services

@using Proyecto2.Frontend.Models

<MudPaper Class="p-6 mx-auto mt-4" Elevation="4" Style="max-width: 600px;">
    <MudText Typo="Typo.h5" GutterBottom="true">Registrar Autor</MudText>

    <MudForm @ref="_form" Model="_autor">
        <MudTextField @bind-Value="_autor.NombreCompleto" Label="Nombre completo" Required="true" />
        <MudDatePicker @bind-Value="_autor.FechaNacimiento" Label="Fecha de nacimiento" Required="true" />
        <MudTextField @bind-Value="_autor.Ciudad" Label="Ciudad de procedencia" />
        <MudTextField @bind-Value="_autor.Correo" Label="Correo electrónico" />

        <MudButton OnClick="SubmitForm" Variant="Variant.Filled" Color="Color.Primary" Class="mt-4">
            Guardar Autor
        </MudButton>
    </MudForm>
</MudPaper>

@code {
    private MudForm _form;
    private AutorDto _autor = new();

    private async Task SubmitForm()
    {
        await _form.Validate();

        if (_form.IsValid)
        {
            var creado = await AutorService.CrearAsync(_autor);

            if (creado)
            {
                Snackbar.Add("Autor registrado exitosamente", Severity.Success);
                _autor = new();
            }
            else
            {
                Snackbar.Add("Error al registrar autor", Severity.Error);
            }

        }
    }

   
}
